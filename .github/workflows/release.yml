# .github/workflows/release.yml
name: Build and Release Artifacts

permissions:
  contents: write

on:
#  push:
#    tags:
#      - 'v*.*.*'   # Trigger the workflow only when a version tag (e.g., v1.0.0) is pushed
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'The tag name for the release'
        required: true
        default: 'v0.1.0'

jobs:
  build_and_release:
    name: Build and Release for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest] # ubuntu-latest,, windows-latest
        arch: [x86_64, arm64]
        include:
#          - os: ubuntu-latest
#            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
#          - os: windows-latest
#            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Rust target for ${{ matrix.arch }}
        run: rustup target add ${{ matrix.target }}

      - name: Build Release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create Tarball for Linux and macOS
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p artifacts
          tar -czvf artifacts/scaf-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C target/${{ matrix.target }}/release scaf

      - name: Create Zip File for Windows
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p artifacts
          powershell Compress-Archive -Path target\${{ matrix.target }}\release\scaf.exe -DestinationPath artifacts\scaf-${{ matrix.os }}-${{ matrix.arch }}.zip

      - name: List artifacts directory
        run: ls -la artifacts/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Release ${{ github.event.inputs.tag_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/scaf-${{ matrix.os }}-${{ matrix.arch }}.${{ endswith('windows-latest', matrix.os) && 'zip' || 'tar.gz' }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts
          asset_name: scaf-${{ matrix.os }}-${{ matrix.arch }}.${{ endswith('windows-latest', matrix.os) && 'zip' || 'tar.gz' }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
